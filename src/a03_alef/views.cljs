(ns a03-alef.views
  (:require
   [re-frame.core :as re-frame]
   [a03-alef.subs :as subs]
   [a03-alef.events :as events]
   [a03-alef.router :as router]))

;; ========== INDIVIDUAL COMPONENTS ============================================
(defn hr
  []
  [:hr {:style {:border "none"
                :height ".1px"
                :margin "10px 15px"
                :background-color "silver"}}])

(defn input-panel
  []
  (let [value @(re-frame/subscribe [::subs/hash-entry])]
    [:div.panel
     [:input {:type :button
              :value "Back"
              :on-click #(re-frame/dispatch [::events/go-back])}]
     [:input {:type :text
              :value value
              :on-change #(re-frame/dispatch [::events/hash-entry
                                              (.. % -target -value)])}]
     [:input {:type :button
              :value "Submit path"
              :on-click #(re-frame/dispatch [::events/refocus-hash value])}]]))

(defn info-panel
  []
  [:div.b
   [:h4.sh "The focus tree"]
   [:code.ip @(re-frame/subscribe [::subs/all-content-str])]
   [hr]
   [:h4.sh "The base tree, generated by request"]
   [:code.ip @(re-frame/subscribe [::subs/base-content-str])]])

(defn cap
  []
  (let [display @(re-frame/subscribe [::subs/content-focus])]
    [:div.b
     (if (or (nil? display) (empty? display))
       [:span.t "There is no content at the current node."]
       display)]))

(defn brick
  [condensed]
  (let [address (-> condensed last .toUpperCase)]
    [:a.a
     {:on-click #(re-frame/dispatch [::events/refocus-hash condensed])}
     [:li.brick address]])) ;HERE!

(defn wythe
  []
  (let [signatures @(re-frame/subscribe [::subs/children-signatures])]
    (if (nil? signatures)
      [:span.b.t "There are no children to populate this wythe."]
      [:ul.wythe
       (for [child signatures]
         ^{:key child} [brick child])])))

;; ========== COMPONENT ASSEMBLY ===============================================
(defn main-panel []
  [:div#wrapper.i
   [:h1 @(re-frame/subscribe [::subs/name])]
   [hr]
   [:div
    {:style {:display "flex"
             :flex-flow "row wrap"}}
    [:div
     {:style {:min-width "450px"
              :min-height "450px"}}
     [input-panel]
     [:div.b
      [cap]
      [wythe]]]
    [:div
     [info-panel]]]])
